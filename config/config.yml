# 应用模式：release、debug（默认release）
app_mode: release

# 服务器配置
server:
  # HTTP服务监听地址和端口号 (格式: [IP]:PORT, 示例: :30103, 127.0.0.1:30103)
  listen_addr: :30103
  # 请求超时时间
  timeout: 30s

# 日志配置
log:
  # 日志级别: debug, info, warn, error
  level: warn

# 全局配置项
global:
  # 文件存储相关配置
  storage:
    # 订阅文件存储主目录
    subscription_dir: ./subscriptions
  # 用户流量统计与到期时间显示配置
  usage_display:
    # 是否在代理分组中显示用户流量和到期信息
    enable: true
    # 信息分组在列表中的位置 (true: 置顶显示, false: 末尾显示)
    prepend: false
    # 流量使用情况的显示模板 (支持变量: {{.used}} - 已用流量, {{.total}} - 总流量)
    traffic_format: "⛽ 已用流量 {{.used}} / {{.total}}"
    # 流量显示单位 (可选: B, K, M, G, T)
    traffic_unit: "G"
    # 重置日期的显示模板 (支持变量: {{.year}}-年, {{.month}}-月, {{.day}}-日, {{.hour}}-时, {{.minute}}-分, {{.second}}-秒)
    expire_format: "📅 重置日期 {{.year}}-{{.month}}-{{.day}}"

# 默认配置参数 (各服务商可在 overrides 中覆盖这些设置)
defaults:
  # 缓存策略配置
  # 缓存分为三个层次：
  # 1. file_ttl: 订阅文件的原始内容缓存
  # 2. api_ttl: 服务商 API 返回数据的缓存
  # 3. response_ttl: 最终生成的订阅内容缓存（合并了文件内容和 API 数据）
  # 所有缓存均按请求路径（path）进行存储，相同路径的请求会复用缓存内容
  cache:
    # 订阅文件缓存时间，0表示不缓存
    # 按请求路径缓存，文件内容缓存后，修改文件需等待缓存失效才能生效
    file_ttl: 0

    # API响应缓存时间，0表示不缓存
    # 按请求路径缓存，建议开启以避免触发服务商限速
    # 如果配置了 response_ttl，可以不配置此项
    api_ttl: 0

    # 最终响应缓存时间，0表示不缓存
    # 按请求路径缓存最终的订阅内容（文件内容 + API响应结果的组合）
    response_ttl: 60s

  # 服务商通用参数配置
  provider:
    # API请求超时时间限制
    request_timeout: 10s
    # 数据更新间隔
    update_interval: 24h

# VPS服务商配置列表
providers:
  # 搬瓦工(BandwagonHost)服务配置
  bandwagonhost:
    # API路由前缀
    - route_prefix: "/2e9d2eee7d2e40d399998c85853f68f4"
      # API凭证
      api_id: "123123"
      api_key: "123123"
      # 关联的订阅配置文件列表
      subscriptions:
        - "1.yaml"
        - "bwg2.yaml"

    - route_prefix: "/e26460a0ac3f49cfaf1c6d31d3846daf"
      # API凭证
      api_id: "456"
      api_key: "111"
      # 关联的订阅配置文件列表
      subscriptions:
        - "bwg2_main.yaml"
        - "bwg2_backup.yaml"
      # 实例特定的配置覆盖
      overrides:
        cache:
          file_ttl: 30s
          api_ttl: 60s
          response_ttl: 0
        provider:
          request_timeout: 10s
          update_interval: 24h

  # Vultr配置示例模板
  # vultr:
  #   - route_prefix: "/vultr1"
  #     api_key: "your-vultr-api-key"
  #     subscriptions:
  #       - "vultr1_main.yaml"
  #       - "vultr1_backup.yaml"
